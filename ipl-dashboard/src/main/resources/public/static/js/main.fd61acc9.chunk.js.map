{"version":3,"sources":["components/MatchDetailCard.js","components/MatchSmallCard.js","pages/TeamPage.js","components/YearSelector.js","pages/MatchPage.js","components/TeamTile.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","teamName","match","otherTeamName","team1","team2","otherteamRoute","isMatchWon","matchWinner","className","to","date","venue","city","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","TeamPage","useState","matches","team","setTeam","useParams","useEffect","a","fetch","process","REACT_APP_API_ROOT_URL","response","json","data","success","fetchTeam","title","value","totalMatches","totalWins","color","slice","map","id","YearSelector","years","year","push","MatchPage","setMatches","fetchMatches","TeamTile","HomePage","teams","setTeams","fetchAllTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd61acc9.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './MatchDetailCard.css'\r\n\r\nconst MatchDetailCard = ({ teamName, match }) => {\r\n\r\n    if (!match) return null\r\n\r\n    const otherTeamName = match.team1 === teamName ? match.team2 : match.team1\r\n\r\n    const otherteamRoute = `/teams/${otherTeamName}`\r\n\r\n    const isMatchWon = teamName === match.matchWinner;\r\n\r\n    return (\r\n        <div className={isMatchWon ? 'MatchDetailCard won-card' : 'MatchDetailCard lost-card'}>\r\n            {/* Row 1 starts */}\r\n            <div>\r\n                <span className='vs'>vs</span>\r\n                <h1>\r\n                    <Link to={otherteamRoute}>\r\n                        {otherTeamName}\r\n                    </Link>\r\n                </h1>\r\n                <h2 className='match-date'>on {match.date}</h2>\r\n                <h3 className='match-venue'>at {match.venue} in {match.city}</h3>\r\n                <p className='match-result'>{match.matchWinner} won by {match.resultMargin} {match.result}</p>\r\n            </div>\r\n            {/* Row 1 ends */}\r\n\r\n            {/* Row 2 starts */}\r\n            <div className='additional-detail'>\r\n                <h3>First Innings</h3>\r\n                <p>{match.team1}</p>\r\n                <h3>Second Innings</h3>\r\n                <p>{match.team2}</p>\r\n                <h3>Man of the match</h3>\r\n                <p>{match.playerOfMatch}</p>\r\n                <h3>Umpires</h3>\r\n                <p>{match.umpire1}, {match.umpire2}</p>\r\n            </div>\r\n            {/* Row 2 ends */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MatchDetailCard\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './MatchSmallCard.css'\r\n\r\nconst MatchSmallCard = ({ teamName, match }) => {\r\n\r\n    if (!match) return null\r\n\r\n    const otherTeamName = match.team1 === teamName ? match.team2 : match.team1\r\n    const otherteamRoute = `/teams/${otherTeamName}`\r\n\r\n    const isMatchWon = teamName === match.matchWinner;\r\n\r\n    return (\r\n        <div className={isMatchWon ? 'MatchSmallCard won-card' : 'MatchSmallCard lost-card'}>\r\n            <span className='vs'>vs</span>\r\n            <h1>\r\n                <Link to={otherteamRoute}>\r\n                    {otherTeamName}\r\n                </Link>\r\n            </h1>\r\n            <p className='match-result'>\r\n                {match.matchWinner} won by {match.resultMargin} {match.result}\r\n            </p>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default MatchSmallCard\r\n","import { React, useEffect, useState } from 'react'\r\nimport { useParams, Link } from 'react-router-dom'\r\nimport MatchDetailCard from '../components/MatchDetailCard'\r\nimport MatchSmallCard from '../components/MatchSmallCard'\r\nimport './TeamPage.css'\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\n\r\nconst TeamPage = () => {\r\n\r\n    const [team, setTeam] = useState({ matches: [] })\r\n\r\n    const { teamName } = useParams()\r\n\r\n    // Fetch Team Matches\r\n    useEffect(\r\n        () => {\r\n            const fetchTeam = async () => {\r\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}`)\r\n                const data = await response.json()\r\n                if (data === null || data.success === false) return null\r\n                else if (data.success === true) return setTeam(data.team)\r\n            }\r\n            fetchTeam()\r\n        }, [teamName]\r\n    )\r\n\r\n    // If team OR teamName not found\r\n    if (!team || !team.teamName) {\r\n        return <h2>\r\n            <i>Team '{teamName}' NOT found!!!</i>\r\n        </h2>\r\n    }\r\n\r\n    return (\r\n        <div className='TeamPage'>\r\n            {/* Row 1 starts */}\r\n            <div className='team-name-section'>\r\n                <h1 className='team-name'>{team.teamName}</h1>\r\n            </div>\r\n            <div className='win-loss-section'>\r\n                Wins / Losses\r\n                <PieChart\r\n                    data={[\r\n                        { title: 'Losses', value: team.totalMatches - team.totalWins, color: '#cc0033' },\r\n                        { title: 'Wins', value: team.totalWins, color: '#00aa66' }\r\n                    ]}\r\n                />\r\n            </div>\r\n            {/* Row 1 ends */}\r\n\r\n            {/* Row 2 starts */}\r\n            <div className='match-detail-section'>\r\n                <h2>Latest Matches</h2>\r\n                {\r\n                    <MatchDetailCard\r\n                        teamName={team.teamName}\r\n                        match={team.matches[0]}\r\n                    />\r\n                }\r\n            </div>\r\n            {/* Row 2 ends */}\r\n\r\n            {/* Row 3 starts */}\r\n            {\r\n                team\r\n                    .matches\r\n                    .slice(1)\r\n                    .map(match =>\r\n                        // <div className='match-small-section'>\r\n                        <MatchSmallCard\r\n                            key={match.id}\r\n                            teamName={team.teamName}\r\n                            match={match}\r\n                        />\r\n                        // </div>\r\n                    )\r\n            }\r\n            <div className='more-link'>\r\n                <Link to={`./${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`}>\r\n                    More {'>'}\r\n                </Link>\r\n            </div>\r\n            {/* Row 3 ends */}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TeamPage\r\n","import { React } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './YearSelector.css'\r\n\r\nconst YearSelector = ({ teamName }) => {\r\n\r\n    let years = []\r\n    const startYear = process.env.REACT_APP_DATA_START_YEAR\r\n    const endYear = process.env.REACT_APP_DATA_END_YEAR\r\n\r\n    for (let year = startYear; year <= endYear; year++) {\r\n        years.push(year);\r\n    }\r\n\r\n    return (\r\n        <ol className='YearSelector'>\r\n            {years.map(year => (\r\n                <li key={year}>\r\n                    <Link to={`/teams/${teamName}/matches/${year}`} >\r\n                        {year}\r\n                    </Link>\r\n                </li>\r\n            ))}\r\n        </ol>\r\n    )\r\n}\r\n\r\nexport default YearSelector\r\n","import { React, useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport MatchDetailCard from '../components/MatchDetailCard'\r\nimport YearSelector from '../components/YearSelector'\r\nimport './MatchPage.css'\r\n\r\nconst MatchPage = () => {\r\n\r\n    const [matches, setMatches] = useState([])\r\n    const { teamName, year } = useParams()\r\n\r\n    // Fetch Matches for a Team\r\n    useEffect(\r\n        () => {\r\n            const fetchMatches = async () => {\r\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}/matches?year=${year}`)\r\n                const data = await response.json()\r\n                if (data === null || data.success === false) return null\r\n                else if (data.success === true) return setMatches(data.matches)\r\n            }\r\n            fetchMatches()\r\n        }, [teamName, year]\r\n    )\r\n\r\n    // If matches not found\r\n    if (!matches) {\r\n        return <h2>\r\n            <i>Matches NOT found!!!</i>\r\n        </h2>\r\n    }\r\n\r\n    return (\r\n        <div className='MatchPage'>\r\n            <div className='year-selector'>\r\n                <h3>Select Year</h3>\r\n                <YearSelector\r\n                    teamName={teamName}\r\n                />\r\n            </div>\r\n            <div>\r\n                <h1 className='page-heading'>\r\n                    {teamName} matches in {year}\r\n                </h1>\r\n                {\r\n                    matches\r\n                        .map(match => <MatchDetailCard\r\n                            key={match.id}\r\n                            teamName={teamName}\r\n                            match={match}\r\n                        />)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MatchPage\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './TeamTile.css'\r\n\r\nconst TeamTile = ({ teamName }) => {\r\n    return (\r\n        <div className='TeamTile'>\r\n            <h1>\r\n                <Link to={`/teams/${teamName}`}>\r\n                    {teamName}\r\n                </Link>\r\n            </h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TeamTile\r\n","import { React, useEffect, useState } from 'react'\r\nimport TeamTile from '../components/TeamTile'\r\nimport './HomePage.css'\r\n\r\nconst HomePage = () => {\r\n\r\n    const [teams, setTeams] = useState([])\r\n\r\n    // Fetch Team Matches\r\n    useEffect(\r\n        () => {\r\n            const fetchAllTeams = async () => {\r\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/`)\r\n                const data = await response.json()\r\n                if (data === null || data.success === false) return null\r\n                else if (data.success === true) return setTeams(data.teams)\r\n            }\r\n            fetchAllTeams()\r\n        }, []\r\n    )\r\n\r\n    return (\r\n        <div className='HomePage'>\r\n\r\n            <div className='header-section'>\r\n                <h1 className='app-name'>CodeMayur IPL Dashboard</h1>\r\n            </div>\r\n\r\n            <div className='team-grid'>\r\n                {\r\n                    teams.map(\r\n                        team =>\r\n                            <TeamTile\r\n                                key={team.id}\r\n                                teamName={team.teamName}\r\n                            />\r\n                    )\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage\r\n","import './App.css';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport TeamPage from './pages/TeamPage';\nimport MatchPage from './pages/MatchPage';\nimport HomePage from './pages/HomePage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n\n          <Route path=\"/teams/:teamName/matches/:year\">\n            <MatchPage />\n          </Route>\n\n          <Route path=\"/teams/:teamName\">\n            <TeamPage />\n          </Route>\n          \n          <Route path=\"/\">\n            <HomePage />\n          </Route>\n\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}